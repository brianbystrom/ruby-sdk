require_relative 'init'

# To show the request logs, simply replace the client instantiation
# with moltin = Moltin::Client.new(logger: Logger.new(STDOUT))
moltin = Moltin::Client.new

begin
  random_string = SecureRandom.hex

  ap '---------------------------'
  ap 'Retrieving all flows...'
  flows = moltin.flows.all.data
  flow = flows.detect { |f| f.slug == 'products' }
  ap flows

  unless flow
    ap '---------------------------'
    ap 'Create new flow for products...'
    flow = moltin.flows.create(name: "New Product Flow (#{random_string})",
                               slug: 'products',
                               description: 'An example flow generated by the Ruby SDK',
                               enabled: true).data
    ap flow
  end

  ap '---------------------------'
  ap "Adding a new field 'custom_field'..."
  field = flow.fields.create(field_type: 'string',
                             slug: 'custom_field',
                             name: 'Custom Product Field',
                             description: 'A custom product field generated by the Ruby SDK',
                             required: false,
                             unique: false).data
  ap field

  ap '---------------------------'
  ap 'Getting the list of attributes...'
  attributes = moltin.products.attributes.data
  ap attributes

  ap '---------------------------'
  ap 'Creating a new product with custom field...'
  product = moltin.products.create(name: "My Product #{random_string}",
                                   slug: "my-product-#{random_string}",
                                   sku: "my.prod.#{random_string}",
                                   description: 'a bit about it',
                                   manage_stock: false,
                                   status: 'live',
                                   commodity_type: 'digital',
                                   price: [{ amount: 10, currency: 'USD', includes_tax: true }],
                                   custom_field: '<p>Welcome to flows!</p>').data
  ap product
  ap product.flow_fields

  ap '---------------------------'
  ap 'Cleaning up...'
  moltin.flows.delete(flow.id)
  moltin.products.delete(product.id)
rescue => e
  ap 'Something went wrong.'
  ap e
end
